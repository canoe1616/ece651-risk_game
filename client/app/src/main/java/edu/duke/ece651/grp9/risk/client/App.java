/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.ece651.grp9.risk.client;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
//import java.net.ServerSocket;
import java.net.Socket;
import java.util.Iterator;
import java.util.Scanner;

import edu.duke.ece651.grp9.risk.shared.Map;
//import edu.duke.ece651.grp9.risk.shared.Message;
import edu.duke.ece651.grp9.risk.shared.Territory;

public class App {
  private final BufferedReader inputReader;

  public App (BufferedReader inputSource) {
    this.inputReader = inputSource;
  }

  public String selectColor(BufferedReader inputSource,Socket socket) throws IOException {
    String s = "";
    //get prompt and print it
    try{
      InputStream inputStream = socket.getInputStream();
      System.out.println("step_1");
      ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);
      System.out.println("step_2");
      String colorPrompt = (String)objectInputStream.readObject();
      System.out.println(colorPrompt);
    }
    catch (Exception e){
      System.out.println(e.getMessage());
    }


    boolean color_correct = false;

    while(color_correct != true){
      try {
        s = inputSource.readLine();
        System.out.println(s);
        //check color valid
        //From server -> color_correct
        OutputStream outputStream = socket.getOutputStream();
        ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);
        objectOutputStream.writeObject(s);

        InputStream inputStream = socket.getInputStream();
        ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);
        color_correct = (boolean)objectInputStream.readObject();

        //break;
      }
      catch (Exception exception) {
        System.out.println(exception.getMessage());
        System.out.println("Invalid! Please enter again:");
      }
    }
    return s;
  }

  public String selectUnit(ObjectInputStream stream, BufferedReader inputSource) throws IOException
  {
    String s = "";
    //get prompt and print it
    try{
      String unitPrompt = (String)stream.readObject();
      System.out.println(unitPrompt);
    }
    catch(Exception exception){
      System.out.println(exception.getMessage());
    }
    while(true){
    try {
      s = inputSource.readLine();
      System.out.println(s);
      break;
    }
    catch (Exception exception) {
      System.out.println(exception.getMessage());
      System.out.println("Invalid! Please enter again:");
    }
    }
    return s;
  }


  public static void main(String[] args) {
        
    BufferedReader inputSource = new BufferedReader(new InputStreamReader(System.in));
    App app = new App(inputSource);

    try {
      Socket socket = new Socket("localhost", 6666);
      //receive map from server
      InputStream inputStream = socket.getInputStream();
      ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);       
      Map myMap = (Map)objectInputStream.readObject();
      System.out.println("Receive Map form server.");


      //sent color

      String color = app.selectColor(inputSource, socket);

      OutputStream outputStream = socket.getOutputStream();
      ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);


      try {
        objectOutputStream.writeObject(color);
      } catch(Exception e) {
        System.out.println(e);
      }

      //you are player x, please select your unit for territory
      String unitString = app.selectUnit(objectInputStream, inputSource);

      outputStream = socket.getOutputStream();
      objectOutputStream = new ObjectOutputStream(outputStream);
      try {
        objectOutputStream.writeObject(unitString);
      } catch(Exception e) {
        System.out.println(e);
      }

      socket.close();
    } catch(Exception e) {
      System.out.println(e);
    }

  }
}
